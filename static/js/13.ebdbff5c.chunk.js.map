{"version":3,"sources":["src/components/AmountMeta.tsx","src/components/InsufficientBalanceButton.tsx","src/components/Notice.tsx","src/components/TokenSymbol.tsx","src/components/ApproveButton.tsx","src/components/TokenAmount.tsx","src/components/TokenName.tsx","src/hooks/useDelayedEffect.tsx","src/components/TokenPrice.tsx","src/components/TokenValue.tsx","src/components/Select.tsx","src/components/UnsupportedButton.tsx","src/components/TokenSearch.tsx","src/components/TokenSelect.tsx","src/components/ExperimentalNotice.tsx","src/hooks/useSwapState.tsx","src/screens/SHTAboutScreen.tsx"],"names":["AmountMeta","props","t","useTranslation","useColors","textDark","textLight","placeholder","style","fontSize","IS_DESKTOP","marginBottom","Spacing","normal","color","disabled","amount","suffix","InsufficientBalanceButton","symbol","title","Notice","borderStyle","border","useStyles","clear","note","text","buttonText","onPressButton","type","size","fontWeight","onPress","titleStyle","buttonStyle","paddingHorizontal","paddingVertical","alignSelf","marginTop","tiny","TokenSymbol","medium","caption","marginLeft","token","ApproveButton","approveToken","useContext","EthersContext","useState","loading","setLoading","useCallback","a","async","onError","address","spender","tx","wait","onSuccess","hidden","containerStyle","TokenAmount","formatBalance","balance","decimals","TokenName","numberOfLines","ellipsizeMode","small","width","name","handles","useDelayedEffect","effect","timeout","inputs","key","toString","useAsyncEffect","handle","setTimeout","clearTimeout","TokenPrice","formatUSD","priceUSD","TokenValue","valueUSD","Item","ITEM_SEPARATOR_HEIGHT","paddingLeft","paddingRight","selected","selectable","setOption","undefined","option","alignItems","flex","description","Select","expanded","onExpand","options","map","UnsupportedButton","state","fromSymbol","toSymbol","Loading","ActivityIndicator","position","right","bottom","TokenItem","accent","onSelectToken","Selectable","FlexView","TokenLogo","View","Button","duplicate","height","TokenSearch","provider","tokens","tokenToAdd","setTokenToAdd","findIndex","tk","useEffect","trim","ethers","utils","isAddress","findOrFetchToken","Input","value","onChangeText","autoFocus","inputStyle","marginHorizontal","inputContainerStyle","borderBottomWidth","marginRight","labelStyle","paddingTop","paddingBottom","onAddToken","TokenList","loadingTokens","renderItem","item","data","useMemo","filter","sort","compareTokens","length","FlatList","keyExtractor","EmptyList","margin","Text","textAlign","CloseIcon","SelectIcon","t1","t2","isZero","value2","value1","localeCompare","TokenSelect","addCustomToken","search","setSearch","query","setQuery","find","toLowerCase","Expandable","onChangeSymbol","includes","ExperimentalNotice","onPressContract","useLinker","contractURL","marginVertical","useSwapState","useTokenPairState","chainId","signer","kovanSigner","updateTokens","getTrade","useSDK","useSwapRouter","swap","calculateSwapFee","useSettlement","calculateLimitOrderFee","calculateLimitOrderReturn","createOrder","orderType","setOrderType","priceInETH","setPriceInETH","trade","setTrade","unsupported","setUnsupported","swapFee","setSwapFee","limitOrderPrice","setLimitOrderPrice","limitOrderFee","setLimitOrderFee","limitOrderSwapFee","setLimitOrderSwapFee","limitOrderReturn","setLimitOrderReturn","swapping","setSwapping","creatingOrder","setCreatingOrder","setFromSymbol","fromToken","isWETH","constants","WeiPerEther","Token","toToken","WETH","Fetcher","fetchPairData","pair","parseBalance","priceOf","toFixed","isEmptyValue","fromAmount","useDelayedOnBlockEffect","block","sub","onSwap","result","onCreateOrder","amountIn","Fraction","parse","apply","mul","pow10","div","limitOrderUnsupported","isETH","Swap","large","OrderTypeSelect","FromTokenSelect","ToTokenSelect","AmountInput","AmountNotice","PriceInput","NoPairNotice","TradeInfo","customTokens","ETH","LimitOrderUnsupportedNotice","limit","setToSymbol","onAmountChanged","setFromAmount","lte","marketPrice","executionPrice","invert","Zero","maxButtonText","isETHWETHPair","WrapInfo","LimitOrderInfo","SwapInfo","SwapControls","outputAmount","price","impact","priceImpact","label","error","setError","approveRequired","fromTokenAllowed","gt","UnwrapButton","WrapButton","ROUTER","setFromTokenAllowed","SwapButton","message","code","catch","onWrap","wrapping","onUnwrap","unwrapping","d","LimitOrderControls","getTokenAllowance","allowed","setAllowed","SETTLEMENT","allowance","BigNumber","from","gte","PlaceOrderButton","PriceTooLowButton","goToLimitOrders","SHTAboutScreen","light","Platform","OS"],"mappings":"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","file":"static/js/13.ebdbff5c.chunk.js","sourcesContent":["import React, { FC } from \"react\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Text from \"./Text\";\n\nexport interface AmountMetaProps {\n    amount?: string;\n    suffix?: string;\n    disabled?: boolean;\n}\n\nconst AmountMeta: FC<AmountMetaProps> = props => {\n    const t = useTranslation();\n    const { textDark, textLight, placeholder } = useColors();\n    return (\n        <Text\n            style={{\n                fontSize: IS_DESKTOP ? 28 : 20,\n                marginBottom: Spacing.normal,\n                color: props.disabled ? placeholder : props.amount ? textDark : textLight\n            }}>\n            {props.disabled ? t(\"n/a\") : props.amount ? props.amount + \" \" + (props.suffix || \"\") : t(\"fetching\")}\n        </Text>\n    );\n};\n\nexport default AmountMeta;\n","import React from \"react\";\n\nimport useTranslation from \"../hooks/useTranslation\";\nimport Button from \"./Button\";\n\nconst InsufficientBalanceButton = ({ symbol }: { symbol: string }) => {\n    const t = useTranslation();\n    return <Button title={symbol ? t(\"insufficient-\", { symbol }) : t(\"insufficient-balance\")} disabled={true} />;\n};\nexport default InsufficientBalanceButton;\n","import React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\nimport Button from \"./Button\";\nimport Text from \"./Text\";\n\nexport interface NoticeProps {\n    text: string;\n    clear?: boolean;\n    color?: string;\n    buttonText?: string;\n    onPressButton?: () => void;\n    style?: ViewStyle;\n}\n\nconst Notice = (props: NoticeProps) => {\n    const { textLight } = useColors();\n    const { border } = useStyles();\n    const borderStyle = border({ color: props.color });\n    const color = props.color || textLight;\n    return (\n        <View style={[props.clear ? {} : borderStyle, props.style]}>\n            <Text note={true} style={{ color }}>\n                {props.text}\n            </Text>\n            {props.buttonText && props.onPressButton && (\n                <Button\n                    title={props.buttonText}\n                    type={\"clear\"}\n                    size={\"small\"}\n                    fontWeight={\"bold\"}\n                    onPress={props.onPressButton}\n                    titleStyle={{ color }}\n                    buttonStyle={{ paddingHorizontal: 0, paddingVertical: 0 }}\n                    style={{ alignSelf: \"flex-end\", marginTop: Spacing.tiny }}\n                />\n            )}\n        </View>\n    );\n};\n\nexport default Notice;\n","import React from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenSymbol = (props: { token: Token; disabled?: boolean }) => (\n    <Text medium={true} caption={true} disabled={props.disabled} style={{ marginLeft: Spacing.tiny }}>\n        {props.token.symbol}\n    </Text>\n);\n\nexport default TokenSymbol;\n","import React, { FC, useCallback, useContext, useState } from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Token from \"../types/Token\";\nimport Button from \"./Button\";\n\nexport interface ApproveButtonProps {\n    token: Token;\n    spender: string;\n    onSuccess: () => void;\n    onError: (e) => void;\n    hidden?: boolean;\n}\n\nconst ApproveButton: FC<ApproveButtonProps> = props => {\n    const t = useTranslation();\n    const { approveToken } = useContext(EthersContext);\n    const [loading, setLoading] = useState(false);\n    const onPress = useCallback(async () => {\n        if (props.token) {\n            props.onError({});\n            setLoading(true);\n            try {\n                const tx = await approveToken(props.token.address, props.spender);\n                if (tx) {\n                    await tx.wait();\n                    props.onSuccess();\n                }\n            } catch (e) {\n                props.onError(e);\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [props.token]);\n    if (props.hidden) return <View />;\n    return (\n        <Button\n            title={t(\"approve\") + \" \" + (props.token?.symbol || \"\")}\n            onPress={onPress}\n            loading={loading}\n            containerStyle={{ marginBottom: Spacing.tiny }}\n        />\n    );\n};\n\nexport default ApproveButton;\n","import React from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport { formatBalance } from \"../utils\";\nimport Text from \"./Text\";\n\nconst TokenAmount = (props: { token: Token; amount?: ethers.BigNumber; disabled?: boolean; style?: TextStyle }) => (\n    <Text caption={IS_DESKTOP} disabled={props.disabled} style={props.style}>\n        {formatBalance(props.amount || props.token.balance, props.token.decimals, 8)}\n    </Text>\n);\n\nexport default TokenAmount;\n","import React from \"react\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenName = (props: { token: Token; disabled?: boolean }) => (\n    <Text\n        caption={true}\n        numberOfLines={1}\n        ellipsizeMode={\"tail\"}\n        style={{ marginLeft: Spacing.small, width: 180 }}\n        disabled={props.disabled}>\n        {IS_DESKTOP ? props.token.name : props.token.symbol}\n    </Text>\n);\n\nexport default TokenName;\n","import useAsyncEffect from \"use-async-effect\";\n\nconst handles = {};\n\nconst useDelayedEffect = (\n    effect: (isMounted: () => boolean) => unknown | Promise<unknown>,\n    timeout: number,\n    inputs?: any[]\n) => {\n    const key = effect.toString();\n    useAsyncEffect<number>(\n        () => {\n            const handle = setTimeout(effect, timeout);\n            handles[key] = handle;\n            return handle;\n        },\n        handle => {\n            clearTimeout(handle);\n        },\n        inputs\n    );\n};\nexport default useDelayedEffect;\n","import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { formatUSD } from \"../utils\";\nimport Text from \"./Text\";\n\nexport interface TokenPriceProps {\n    token: TokenWithValue;\n    disabled?: boolean;\n    style?: TextStyle;\n}\n\nconst TokenPrice: FC<TokenPriceProps> = props => {\n    return (\n        <Text note={true} fontWeight={\"light\"} disabled={props.disabled} style={props.style}>\n            {formatUSD(props.token.priceUSD || 0, 4)}\n        </Text>\n    );\n};\n\nexport default TokenPrice;\n","import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { formatUSD } from \"../utils\";\nimport Text from \"./Text\";\n\nexport interface TokenValueProps {\n    token: TokenWithValue;\n    disabled?: boolean;\n    style?: TextStyle;\n}\n\nconst TokenValue: FC<TokenValueProps> = props => {\n    return (\n        <Text note={true} fontWeight={\"light\"} disabled={props.disabled} style={props.style}>\n            {formatUSD(props.token.valueUSD || 0, 4)}\n        </Text>\n    );\n};\n\nexport default TokenValue;\n","import React, { FC } from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport CloseIcon from \"./CloseIcon\";\nimport Expandable from \"./Expandable\";\nimport FlexView from \"./FlexView\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Selectable from \"./Selectable\";\nimport SelectIcon from \"./SelectIcon\";\nimport Text from \"./Text\";\n\nexport interface Option {\n    key: string;\n    title: string;\n    description: string;\n}\n\nexport interface SelectProps {\n    title: string;\n    options: Option[];\n    option?: Option;\n    setOption: (option?: Option) => void;\n}\n\nconst Select: FC<SelectProps> = props => {\n    return (\n        <View>\n            <Expandable title={props.title} expanded={!props.option} onExpand={() => props.setOption()}>\n                {props.options.map(option => (\n                    <Item\n                        key={option.key}\n                        option={option}\n                        setOption={props.setOption}\n                        selected={option.key === props.option?.key}\n                    />\n                ))}\n            </Expandable>\n            {props.option && (\n                <Item option={props.option} setOption={props.setOption} selected={true} selectable={false} />\n            )}\n        </View>\n    );\n};\n\nconst Item = (props: {\n    option: Option;\n    setOption?: (option?: Option) => void;\n    selected: boolean;\n    selectable?: boolean;\n}) => {\n    return (\n        <Selectable\n            containerStyle={{ marginBottom: ITEM_SEPARATOR_HEIGHT }}\n            style={{ paddingLeft: Spacing.small + Spacing.tiny, paddingRight: Spacing.small }}\n            selected={props.selected}\n            disabled={props.selectable}\n            onPress={() => props.setOption?.(props.selected ? undefined : props.option)}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <View style={{ flex: 1 }}>\n                    <Text fontWeight={\"regular\"}>{props.option.title}</Text>\n                    <Text note={true} style={{ marginTop: 4 }}>\n                        {props.option.description}\n                    </Text>\n                </View>\n                {props.selected ? <CloseIcon /> : <SelectIcon />}\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport default Select;\n","import React from \"react\";\n\nimport { TokenPairState } from \"../hooks/useTokenPairState\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Button from \"./Button\";\n\nconst UnsupportedButton = ({ state }: { state: TokenPairState }) => {\n    const t = useTranslation();\n    return <Button title={state.fromSymbol + \"-\" + state.toSymbol + \" \" + t(\"not-supported\")} disabled={true} />;\n};\n\nexport default UnsupportedButton;\n","import React, { FC, useCallback, useContext, useEffect, useState } from \"react\";\nimport { ActivityIndicator, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useColors from \"../hooks/useColors\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport useStyles from \"../hooks/useStyles\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Token from \"../types/Token\";\nimport { findOrFetchToken } from \"../utils/fetch-utils\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Input from \"./Input\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Selectable from \"./Selectable\";\nimport TokenLogo from \"./TokenLogo\";\nimport TokenName from \"./TokenName\";\n\nexport interface TokenSearchProps {\n    tokens?: Token[];\n    text: string;\n    onChangeText: (text: string) => void;\n    onAddToken?: (token: Token) => void;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenSearch: FC<TokenSearchProps> = props => {\n    const t = useTranslation();\n    const { border } = useStyles();\n    const { provider, tokens } = useContext(EthersContext);\n    const [tokenToAdd, setTokenToAdd] = useState<Token>();\n    const [loading, setLoading] = useState(false);\n    const duplicate = !!tokenToAdd && tokens.findIndex(tk => tk.address === tokenToAdd.address) !== -1;\n    if (!props.tokens) return <View />;\n    useEffect(() => {\n        if (props.text === \"\") {\n            setLoading(false);\n            setTokenToAdd(undefined);\n        }\n    }, [props.text]);\n    useDelayedEffect(\n        async () => {\n            const address = props.text.trim();\n            if (provider && ethers.utils.isAddress(address)) {\n                setLoading(true);\n                try {\n                    const token = await findOrFetchToken(address, provider);\n                    if (token.name && token.symbol && token.decimals) {\n                        setTokenToAdd(token as Token);\n                    }\n                } finally {\n                    setLoading(false);\n                }\n            }\n        },\n        300,\n        [provider, props.text]\n    );\n    return (\n        <View>\n            <FlexView style={{ marginBottom: Spacing.small }}>\n                <Input\n                    value={props.text}\n                    onChangeText={props.onChangeText}\n                    placeholder={t(\"token-name-symbol-or-address\")}\n                    autoFocus={IS_DESKTOP}\n                    inputStyle={{ marginHorizontal: Spacing.tiny, fontSize: props.text ? 20 : 16 }}\n                    inputContainerStyle={{ borderBottomWidth: 0, marginRight: loading ? 32 : 0 }}\n                    labelStyle={{ height: 0 }}\n                    containerStyle={{\n                        ...border(),\n                        paddingHorizontal: Spacing.tiny,\n                        paddingTop: 12,\n                        paddingBottom: 0\n                    }}\n                />\n                {props.onAddToken && loading && <Loading />}\n            </FlexView>\n            {props.onAddToken && tokenToAdd && (\n                <TokenItem token={tokenToAdd} selected={true} onSelectToken={props.onAddToken} duplicate={duplicate} />\n            )}\n        </View>\n    );\n};\n\nconst Loading = () => <ActivityIndicator size={\"small\"} style={{ position: \"absolute\", right: 16, bottom: 16 }} />;\n\nconst TokenItem = (props: {\n    token: Token;\n    selected: boolean;\n    onSelectToken: (token: Token) => void;\n    duplicate: boolean;\n}) => {\n    const t = useTranslation();\n    const { accent } = useColors();\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <Selectable\n            selected={false}\n            disabled={true}\n            onPress={onPress}\n            containerStyle={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT\n            }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token} />\n                <TokenName token={props.token} />\n                <View style={{ flex: 1 }} />\n                <Button\n                    type={\"clear\"}\n                    size={\"small\"}\n                    color={accent}\n                    title={props.duplicate ? t(\"already-added\") : t(\"-add-\") + \" \" + props.token.symbol}\n                    fontWeight={\"bold\"}\n                    onPress={onPress}\n                    disabled={props.duplicate}\n                    buttonStyle={{ paddingHorizontal: 4, height: 27 }}\n                />\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport default TokenSearch;\n","import React, { FC, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { FlatList, View, ViewStyle } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport Token from \"../types/Token\";\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport CloseIcon from \"./CloseIcon\";\nimport Expandable from \"./Expandable\";\nimport FlexView from \"./FlexView\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Loading from \"./Loading\";\nimport Selectable from \"./Selectable\";\nimport SelectIcon from \"./SelectIcon\";\nimport Text from \"./Text\";\nimport TokenAmount from \"./TokenAmount\";\nimport TokenLogo from \"./TokenLogo\";\nimport TokenName from \"./TokenName\";\nimport TokenPrice from \"./TokenPrice\";\nimport TokenSearch from \"./TokenSearch\";\nimport TokenSymbol from \"./TokenSymbol\";\nimport TokenValue from \"./TokenValue\";\n\nexport interface TokenSelectProps {\n    title: string;\n    symbol: string;\n    onChangeSymbol: (symbol: string) => void;\n    disabled?: (token: Token) => boolean;\n    hidden?: (token: Token) => boolean;\n    style?: ViewStyle;\n}\n\nconst TokenSelect: FC<TokenSelectProps> = props => {\n    const { tokens, addCustomToken } = useContext(EthersContext);\n    const [search, setSearch] = useState(\"\");\n    const [query, setQuery] = useState(\"\");\n    const token = useMemo(() => tokens.find(t => t.symbol === props.symbol), [tokens, props.symbol]);\n    const onSelectToken = t => props.onChangeSymbol(t.symbol);\n    const onUnselectToken = () => props.onChangeSymbol(\"\");\n    const onAddToken = async (t: Token) => {\n        await addCustomToken(t);\n        setSearch(\"\");\n        setQuery(\"\");\n        props.onChangeSymbol(t.symbol);\n    };\n    const hidden = (t: Token) => {\n        if (query.length > 0) {\n            return !t.symbol.toLowerCase().includes(query) && !t.name.toLowerCase().includes(query);\n        }\n        return props.hidden?.(t) || false;\n    };\n    useEffect(() => setSearch(\"\"), [props.symbol]);\n    useDelayedEffect(() => setQuery(search.trim().toLowerCase()), 300, [search]);\n    return (\n        <View style={props.style}>\n            <Expandable title={props.title} expanded={!props.symbol} onExpand={() => props.onChangeSymbol(\"\")}>\n                <TokenSearch text={search} onChangeText={setSearch} tokens={tokens} onAddToken={onAddToken} />\n                <TokenList disabled={props.disabled} hidden={hidden} onSelectToken={onSelectToken} />\n            </Expandable>\n            {token && <TokenItem token={token} selected={true} onSelectToken={onUnselectToken} selectable={true} />}\n        </View>\n    );\n};\n\nconst TokenList = (props: {\n    onSelectToken: (token: Token) => void;\n    disabled?: (token: Token) => boolean;\n    hidden?: (token: Token) => boolean;\n}) => {\n    const { loadingTokens, tokens } = useContext(EthersContext);\n    const renderItem = useCallback(\n        ({ item }) => {\n            return (\n                <TokenItem\n                    key={item.address}\n                    token={item}\n                    selected={false}\n                    onSelectToken={props.onSelectToken}\n                    disabled={props.disabled?.(item)}\n                />\n            );\n        },\n        [props.onSelectToken, props.disabled]\n    );\n    const data = useMemo(\n        () => tokens.filter(token => (props.hidden ? !props.hidden(token) : true)).sort(compareTokens),\n        [tokens, props.hidden]\n    );\n    return loadingTokens ? (\n        <Loading />\n    ) : data.length === 0 ? (\n        <EmptyList />\n    ) : (\n        <FlatList keyExtractor={item => item.address} data={data} renderItem={renderItem} />\n    );\n};\n\nconst EmptyList = () => {\n    return (\n        <View style={{ margin: Spacing.normal }}>\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\n                {\"You don't have any matching tokens.\"}\n            </Text>\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenItem = (props: {\n    token: TokenWithValue;\n    selected: boolean;\n    onSelectToken: (token: Token) => void;\n    disabled?: boolean;\n    selectable?: boolean;\n}) => {\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <Selectable\n            selected={props.selected}\n            onPress={onPress}\n            disabled={props.disabled || props.selectable}\n            containerStyle={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT\n            }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token} disabled={props.disabled} />\n                <View>\n                    {props.token.priceUSD !== null && (\n                        <TokenPrice\n                            token={props.token}\n                            disabled={props.disabled}\n                            style={{ marginLeft: Spacing.small }}\n                        />\n                    )}\n                    <TokenName token={props.token} disabled={props.disabled} />\n                </View>\n                <View style={{ flex: 1, alignItems: \"flex-end\" }}>\n                    {props.token.valueUSD !== null && <TokenValue token={props.token} disabled={props.disabled} />}\n                    <FlexView>\n                        <TokenAmount\n                            token={props.token}\n                            disabled={props.disabled}\n                            style={{ flex: 1, textAlign: \"right\" }}\n                        />\n                        {IS_DESKTOP && <TokenSymbol token={props.token} disabled={props.disabled} />}\n                    </FlexView>\n                </View>\n                {props.selected ? <CloseIcon /> : <SelectIcon />}\n            </FlexView>\n        </Selectable>\n    );\n};\n\nconst compareTokens = (t1: TokenWithValue, t2: TokenWithValue) => {\n    if (t2.balance.isZero() && t1.balance.isZero()) return (t2?.priceUSD || 0) - (t1?.priceUSD || 0);\n    const value2 = t2?.valueUSD || 0;\n    const value1 = t1?.valueUSD || 1;\n    if (value2 === value1) {\n        return (\n            (t2.balance.isZero() ? 0 : 10000000000) -\n            (t1.balance.isZero() ? 0 : 10000000000) +\n            t1.symbol.localeCompare(t2.symbol)\n        );\n    }\n    return value2 - value1;\n};\n\nexport default TokenSelect;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useLinker from \"../hooks/useLinker\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Notice from \"./Notice\";\n\nconst ExperimentalNotice = (props: { contractURL: string }) => {\n    const t = useTranslation();\n    const onPressContract = useLinker(props.contractURL, \"\", \"_blank\");\n    return (\n        <View style={{ marginVertical: Spacing.tiny }}>\n            <Notice\n                text={t(\"experimental-notice\")}\n                color={\"orange\"}\n                buttonText={\"View Contract\"}\n                onPressButton={onPressContract}\n            />\n        </View>\n    );\n};\n\nexport default ExperimentalNotice;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\n\nimport { Trade } from \"@sushiswap/sdk\";\nimport { Fetcher, Token, WETH } from \"@uniswap/sdk\";\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport Fraction from \"../constants/Fraction\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { formatBalance, isEmptyValue, isETH, isWETH, parseBalance, pow10 } from \"../utils\";\nimport useDelayedEffect from \"./useDelayedEffect\";\nimport useDelayedOnBlockEffect from \"./useDelayedOnBlockEffect\";\nimport useSDK from \"./useSDK\";\nimport useSettlement from \"./useSettlement\";\nimport useSwapRouter from \"./useSwapRouter\";\nimport useTokenPairState, { TokenPairState } from \"./useTokenPairState\";\n\nexport type OrderType = \"market\" | \"limit\";\n\nexport interface SwapState extends TokenPairState {\n    orderType?: OrderType;\n    setOrderType: (orderType?: OrderType) => void;\n    priceInETH?: ethers.BigNumber | null;\n    trade?: Trade;\n    unsupported: boolean;\n    limitOrderUnsupported: boolean;\n    limitOrderPrice: string;\n    setLimitOrderPrice: (price: string) => void;\n    swapFee: string;\n    limitOrderFee: string;\n    limitOrderSwapFee: string;\n    limitOrderReturn: string;\n    onSwap: () => Promise<void>;\n    swapping: boolean;\n    onCreateOrder: () => Promise<void>;\n    creatingOrder: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useSwapState: () => SwapState = () => {\n    const state = useTokenPairState();\n    const { chainId, provider, signer, kovanSigner, updateTokens } = useContext(EthersContext);\n    const { getTrade } = useSDK();\n    const { swap, calculateSwapFee } = useSwapRouter();\n    const { calculateLimitOrderFee, calculateLimitOrderReturn } = useSettlement();\n    const { createOrder } = useSettlement();\n    const [loading, setLoading] = useState(true);\n    const [orderType, setOrderType] = useState<OrderType>();\n    const [priceInETH, setPriceInETH] = useState<ethers.BigNumber | null>();\n    const [trade, setTrade] = useState<Trade>();\n    const [unsupported, setUnsupported] = useState(false);\n    const [swapFee, setSwapFee] = useState(\"\");\n    const [limitOrderPrice, setLimitOrderPrice] = useState<string>(\"\");\n    const [limitOrderFee, setLimitOrderFee] = useState(\"\");\n    const [limitOrderSwapFee, setLimitOrderSwapFee] = useState(\"\");\n    const [limitOrderReturn, setLimitOrderReturn] = useState(\"\");\n    const [swapping, setSwapping] = useState(false);\n    const [creatingOrder, setCreatingOrder] = useState(false);\n\n    useEffect(() => {\n        if (!orderType) {\n            state.setFromSymbol(\"\");\n        }\n        setLimitOrderPrice(\"\");\n    }, [orderType]);\n\n    useAsyncEffect(async () => {\n        setPriceInETH(undefined);\n        if (provider && state.fromToken) {\n            if (isWETH(state.fromToken)) {\n                setPriceInETH(ethers.constants.WeiPerEther);\n            } else {\n                try {\n                    const fromToken = new Token(chainId, state.fromToken.address, state.fromToken.decimals);\n                    const toToken = WETH[chainId];\n                    const pair = await Fetcher.fetchPairData(fromToken, toToken, provider);\n                    setPriceInETH(parseBalance(pair.priceOf(toToken).toFixed(), fromToken.decimals));\n                } catch (e) {\n                    setPriceInETH(null);\n                }\n            }\n        }\n    }, [chainId, provider, state.fromToken]);\n\n    useDelayedEffect(\n        () => {\n            if (isEmptyValue(state.fromAmount)) {\n                setLimitOrderPrice(\"\");\n                setTrade(undefined);\n            }\n        },\n        300,\n        [state.fromAmount]\n    );\n\n    useDelayedOnBlockEffect(\n        async block => {\n            if (!block) {\n                setLoading(true);\n            }\n            if (state.fromToken && state.toToken && state.fromAmount && provider) {\n                const amount = parseBalance(state.fromAmount, state.fromToken.decimals);\n                if (!amount.isZero()) {\n                    setUnsupported(false);\n                    try {\n                        setTrade(await getTrade(state.fromToken, state.toToken, amount, provider));\n                    } catch (e) {\n                        setUnsupported(true);\n                    } finally {\n                        setLoading(false);\n                    }\n                }\n            }\n        },\n        () => \"getTrade(\" + state.fromSymbol + \",\" + state.toSymbol + \",\" + state.fromAmount + \")\",\n        [state.fromSymbol, state.toSymbol, state.fromAmount]\n    );\n\n    useAsyncEffect(() => {\n        if (trade && !isEmptyValue(state.fromAmount)) {\n            const fromAmount = parseBalance(state.fromAmount, state.fromToken!.decimals);\n            setSwapFee(formatBalance(calculateSwapFee(fromAmount), state.fromToken!.decimals, 8));\n            if (orderType === \"limit\") {\n                setLimitOrderFee(formatBalance(calculateLimitOrderFee(fromAmount), state.fromToken!.decimals, 8));\n                setLimitOrderSwapFee(\n                    formatBalance(\n                        calculateSwapFee(fromAmount.sub(calculateLimitOrderFee(fromAmount))),\n                        state.fromToken!.decimals,\n                        8\n                    )\n                );\n            }\n        }\n    }, [orderType, trade, state.fromAmount]);\n\n    useAsyncEffect(() => {\n        if (state.fromToken && state.toToken && !isEmptyValue(state.fromAmount) && !isEmptyValue(limitOrderPrice)) {\n            setLimitOrderReturn(\n                formatBalance(\n                    calculateLimitOrderReturn(\n                        state.fromToken,\n                        state.toToken,\n                        parseBalance(state.fromAmount, state.fromToken.decimals),\n                        limitOrderPrice\n                    ),\n                    state.toToken.decimals\n                )\n            );\n        }\n    }, [state.fromToken, state.toToken, state.fromAmount, limitOrderPrice]);\n\n    const onSwap = useCallback(async () => {\n        if (state.fromToken && state.toToken && state.fromAmount && signer && trade) {\n            setSwapping(true);\n            try {\n                const result = await swap(trade, signer);\n                if (result) {\n                    await result.tx.wait();\n                    await updateTokens();\n                    setTrade(undefined);\n                    setOrderType(undefined);\n                }\n            } finally {\n                setSwapping(false);\n            }\n        }\n    }, [state.fromToken, state.toToken, state.fromAmount, signer, trade]);\n\n    const onCreateOrder = useCallback(async () => {\n        if (\n            state.fromToken &&\n            state.toToken &&\n            state.fromAmount &&\n            !isEmptyValue(limitOrderPrice) &&\n            signer &&\n            kovanSigner\n        ) {\n            setCreatingOrder(true);\n            try {\n                const amountIn = parseBalance(state.fromAmount, state.fromToken.decimals);\n                const tx = await createOrder(\n                    state.fromToken,\n                    state.toToken,\n                    amountIn,\n                    Fraction.parse(limitOrderPrice)\n                        .apply(amountIn)\n                        .mul(pow10(state.toToken.decimals))\n                        .div(pow10(state.fromToken.decimals)),\n                    signer,\n                    kovanSigner\n                );\n                await tx.wait();\n                setTrade(undefined);\n                setOrderType(undefined);\n            } finally {\n                setCreatingOrder(false);\n            }\n        }\n    }, [state.fromToken, state.toToken, state.fromAmount, signer, kovanSigner, limitOrderPrice]);\n\n    return {\n        ...state,\n        loading: loading || state.loading,\n        orderType,\n        setOrderType,\n        priceInETH,\n        trade,\n        unsupported,\n        swapFee,\n        limitOrderPrice,\n        setLimitOrderPrice,\n        limitOrderFee,\n        limitOrderSwapFee,\n        limitOrderReturn,\n        onSwap,\n        swapping,\n        limitOrderUnsupported: orderType === \"limit\" && (isETH(state.fromToken) || isETH(state.toToken)),\n        onCreateOrder,\n        creatingOrder\n    };\n};\n\nexport default useSwapState;\n","import React, { useCallback, useContext, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport AmountMeta from \"../components/AmountMeta\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport BackgroundImage from \"../components/BackgroundImage\";\nimport Border from \"../components/Border\";\nimport Button from \"../components/Button\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport ExperimentalNotice from \"../components/ExperimentalNotice\";\nimport FetchingButton from \"../components/FetchingButton\";\nimport Heading from \"../components/Heading\";\nimport InfoBox from \"../components/InfoBox\";\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\nimport Meta from \"../components/Meta\";\nimport Notice from \"../components/Notice\";\nimport Select, { Option } from \"../components/Select\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenInput from \"../components/TokenInput\";\nimport TokenSelect from \"../components/TokenSelect\";\nimport UnsupportedButton from \"../components/UnsupportedButton\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { SwapSubMenu } from \"../components/web/WebSubMenu\";\nimport { ROUTER, SETTLEMENT } from \"../constants/contracts\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Fraction from \"../constants/Fraction\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useColors from \"../hooks/useColors\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport useLinker from \"../hooks/useLinker\";\nimport useSwapState, { OrderType, SwapState } from \"../hooks/useSwapState\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport Token from \"../types/Token\";\nimport { formatBalance, isEmptyValue, isETH, isETHWETHPair, isWETH, parseBalance } from \"../utils\";\nimport Screen from \"./Screen\";\n\nconst SHTAboutScreen = () => {\n    const t = useTranslation();\n    return (\n        <Screen>\n            <Container>\n                <BackgroundImage />\n                <Content>\n                    <Title text={t(\"new-order\")} />\n                    <Text light={true}>{t(\"new-order-desc\")}</Text>\n                    <Swap />\n                </Content>\n                {Platform.OS === \"web\" && <WebFooter />}\n            </Container>\n            <SwapSubMenu />\n        </Screen>\n    );\n};\n\nconst Swap = () => {\n    const state = useSwapState();\n    return (\n        <View style={{ marginTop: Spacing.large }}>\n            <OrderTypeSelect state={state} />\n            <Border />\n            <FromTokenSelect state={state} />\n            <Border />\n            <ToTokenSelect state={state} />\n            <Border />\n            <AmountInput state={state} />\n            {state.orderType === \"limit\" && (\n                <View style={{ marginTop: Spacing.small }}>\n                    <AmountNotice state={state} />\n                    <Border />\n                    <PriceInput state={state} />\n                </View>\n            )}\n            {!state.loading && !state.trade && <NoPairNotice state={state} />}\n            <TradeInfo state={state} />\n        </View>\n    );\n};\n\nconst OrderTypeSelect = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    const options: Option[] = [\n        { key: \"market\", title: t(\"market-order\"), description: t(\"market-order-desc\") },\n        { key: \"limit\", title: t(\"limit-order\"), description: t(\"limit-order-desc\") }\n    ];\n    return (\n        <View>\n            <Select\n                title={t(\"order-type\")}\n                options={options}\n                option={options.find(option => option.key === state.orderType)}\n                setOption={option => state.setOrderType(option?.key as OrderType | undefined)}\n            />\n            {state.orderType === \"limit\" && (\n                <ExperimentalNotice\n                    contractURL={\n                        \"https://github.com/sushiswap/sushiswap-settlement/blob/master/contracts/Settlement.sol\"\n                    }\n                />\n            )}\n        </View>\n    );\n};\n\nconst FromTokenSelect = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    const { tokens, customTokens } = useContext(EthersContext);\n    if (!state.orderType) {\n        return <Heading text={t(\"token-to-sell\")} disabled={true} />;\n    }\n    const ETH = tokens ? tokens.find(token => isETH(token)) : null;\n    return (\n        <View>\n            <TokenSelect\n                title={t(\"token-to-sell\")}\n                symbol={state.fromSymbol}\n                onChangeSymbol={state.setFromSymbol}\n                hidden={token =>\n                    (!customTokens.find(tk => tk.address === token.address) && token.balance.isZero()) ||\n                    (state.orderType === \"limit\" && isETH(token))\n                }\n            />\n            {state.orderType === \"limit\" && !state.fromSymbol && ETH && !ETH.balance.isZero() && (\n                <LimitOrderUnsupportedNotice />\n            )}\n        </View>\n    );\n};\n\nconst ToTokenSelect = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    if (!state.orderType || !state.fromSymbol) {\n        return <Heading text={t(\"token-to-buy\")} disabled={true} />;\n    }\n    const limit = state.orderType === \"limit\";\n    const onChangeSymbol = (symbol: string) => {\n        state.setToSymbol(limit && symbol === \"ETH\" ? \"WETH\" : symbol);\n    };\n    return (\n        <View>\n            <TokenSelect\n                title={t(\"token-to-buy\")}\n                symbol={state.toSymbol}\n                onChangeSymbol={onChangeSymbol}\n                hidden={token => token.symbol === state.fromSymbol || (limit && isETH(token))}\n            />\n            {state.orderType === \"limit\" && !state.toSymbol && <LimitOrderUnsupportedNotice />}\n        </View>\n    );\n};\n\nconst AmountInput = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    if (!state.fromSymbol || !state.toSymbol) {\n        return <Heading text={t(\"amount\")} disabled={true} />;\n    }\n    return (\n        <View>\n            <Heading text={state.fromSymbol + \" \" + t(\"amount\")} />\n            <TokenInput\n                token={state.fromToken}\n                amount={state.fromAmount}\n                onAmountChanged={state.setFromAmount}\n                autoFocus={IS_DESKTOP}\n            />\n        </View>\n    );\n};\n\nconst AmountNotice = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    if (\n        state.priceInETH === undefined ||\n        isEmptyValue(state.fromAmount) ||\n        !state.fromToken ||\n        (state.priceInETH && parseBalance(state.fromAmount, state.fromToken.decimals).lte(state.priceInETH.mul(10)))\n    ) {\n        return <View />;\n    }\n    return (\n        <View>\n            <Notice\n                text={\n                    state.priceInETH === null\n                        ? t(\"token-not-supported-in-beta\")\n                        : t(\"maximum-allowed-amount-in-beta\", {\n                              amount: formatBalance(state.priceInETH.mul(10), state.fromToken!.decimals),\n                              symbol: state.fromSymbol\n                          })\n                }\n                color={\"red\"}\n            />\n        </View>\n    );\n};\n\nconst PriceInput = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    if (!state.fromSymbol || !state.toSymbol) {\n        return <Heading text={t(\"minimum-price\")} disabled={true} />;\n    }\n    const marketPrice =\n        state.toToken && state.trade\n            ? parseBalance(state.trade.executionPrice.invert().toFixed(state.toToken.decimals), state.toToken.decimals)\n            : ethers.constants.Zero;\n    return (\n        <TokenInput\n            title={t(\"minimum-price\") + \" (\" + state.fromSymbol + \"/\" + state.toSymbol + \")\"}\n            token={\n                {\n                    ...state.toToken,\n                    balance: marketPrice\n                } as Token\n            }\n            amount={state.limitOrderPrice}\n            onAmountChanged={state.setLimitOrderPrice}\n            maxButtonText={t(\"-market-\")}\n        />\n    );\n};\n\nconst LimitOrderUnsupportedNotice = () => {\n    const { placeholder } = useColors();\n    const t = useTranslation();\n    return (\n        <Notice\n            text={t(\"eth-not-supported-for-limit-orders\")}\n            color={placeholder}\n            clear={true}\n            style={{ marginVertical: Spacing.small, marginHorizontal: Spacing.tiny }}\n        />\n    );\n};\n\nconst NoPairNotice = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    return (\n        <Notice\n            text={t(\"pair-not-created\", { fromSymbol: state.fromSymbol, toSymbol: state.toSymbol })}\n            color={\"red\"}\n            style={{ marginTop: Spacing.normal }}\n        />\n    );\n};\n\nconst TradeInfo = ({ state }: { state: SwapState }) => {\n    if (isETHWETHPair(state.fromToken, state.toToken)) {\n        return <WrapInfo state={state} />;\n    }\n    const disabled =\n        state.fromSymbol === \"\" ||\n        state.toSymbol === \"\" ||\n        isEmptyValue(state.fromAmount) ||\n        (state.orderType === \"limit\" && isETH(state.fromToken)) ||\n        (!state.loading && !state.trade);\n    return (\n        <InfoBox>\n            {state.orderType === \"limit\" ? (\n                <LimitOrderInfo state={state} />\n            ) : (\n                <SwapInfo state={state} disabled={disabled} />\n            )}\n        </InfoBox>\n    );\n};\n\nconst WrapInfo = ({ state }: { state: SwapState }) => {\n    const disabled = isEmptyValue(state.fromAmount);\n    return (\n        <InfoBox>\n            <Text style={{ fontSize: 28, marginBottom: Spacing.normal }} disabled={disabled}>\n                {disabled ? \"N/A\" : state.fromAmount + \" \" + state.toSymbol}\n            </Text>\n            <SwapControls state={state} />\n        </InfoBox>\n    );\n};\n\nconst SwapInfo = ({ state, disabled }: { state: SwapState; disabled: boolean }) => {\n    const t = useTranslation();\n    const amount = state.trade?.outputAmount?.toFixed();\n    const price = state.trade?.executionPrice?.toFixed();\n    const impact = state.trade?.priceImpact?.toFixed(2);\n    return (\n        <View>\n            <AmountMeta amount={amount} suffix={state.toSymbol} disabled={disabled} />\n            <Meta\n                label={t(\"price\")}\n                text={price}\n                suffix={state.toSymbol + \"  = 1 \" + state.fromSymbol}\n                disabled={disabled}\n            />\n            <Meta label={t(\"price-impact\")} text={impact} suffix={\"%\"} disabled={disabled} />\n            <Meta label={t(\"fee-amount\")} text={state.swapFee} suffix={state.fromSymbol} disabled={disabled} />\n            <SwapControls state={state} />\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst SwapControls = ({ state }: { state: SwapState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.fromSymbol, state.toSymbol, state.fromAmount]);\n    const approveRequired = !isETH(state.fromToken) && !state.fromTokenAllowed;\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {!state.fromToken ||\n            !state.toToken ||\n            isEmptyValue(state.fromAmount) ||\n            (!state.loading && !state.trade) ? (\n                <SwapButton state={state} onError={setError} disabled={true} />\n            ) : parseBalance(state.fromAmount, state.fromToken.decimals).gt(state.fromToken.balance) ? (\n                <InsufficientBalanceButton symbol={state.fromSymbol} />\n            ) : isWETH(state.fromToken) && isETH(state.toToken) ? (\n                <UnwrapButton state={state} onError={setError} />\n            ) : isETH(state.fromToken) && isWETH(state.toToken) ? (\n                <WrapButton state={state} onError={setError} />\n            ) : state.unsupported ? (\n                <UnsupportedButton state={state} />\n            ) : state.loading || !state.trade ? (\n                <FetchingButton />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.fromToken}\n                        spender={ROUTER}\n                        onSuccess={() => state.setFromTokenAllowed(true)}\n                        onError={setError}\n                        hidden={!approveRequired}\n                    />\n                    <SwapButton state={state} onError={setError} disabled={approveRequired} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst SwapButton = ({ state, onError, disabled }: { state: SwapState; onError: (e) => void; disabled: boolean }) => {\n    const t = useTranslation();\n    const onPress = useCallback(() => {\n        onError({});\n        state.onSwap().catch(onError);\n    }, [state.onSwap, onError]);\n    return (\n        <Button\n            title={\n                t(\"swap\") + (state.fromSymbol && state.toSymbol ? \" \" + state.fromSymbol + \"-\" + state.toSymbol : \"\")\n            }\n            disabled={disabled}\n            loading={state.swapping}\n            onPress={onPress}\n        />\n    );\n};\n\nconst WrapButton = ({ state, onError }: { state: SwapState; onError: (e) => void }) => {\n    const t = useTranslation();\n    const onPress = useCallback(async () => {\n        onError({});\n        state.onWrap().catch(onError);\n    }, []);\n    return <Button title={t(\"wrap\")} loading={state.wrapping} onPress={onPress} />;\n};\n\nconst UnwrapButton = ({ state, onError }: { state: SwapState; onError: (e) => void }) => {\n    const t = useTranslation();\n    const onPress = useCallback(async () => {\n        onError({});\n        state.onUnwrap().catch(onError);\n    }, []);\n    return <Button title={t(\"unwrap\")} loading={state.unwrapping} onPress={onPress} />;\n};\n\nconst LimitOrderInfo = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    const d = !state.trade?.executionPrice;\n    return (\n        <View>\n            <Text\n                disabled={isEmptyValue(state.limitOrderReturn)}\n                style={{ fontSize: 28, marginBottom: Spacing.normal }}>\n                {isEmptyValue(state.limitOrderReturn) ? \"N/A\" : state.limitOrderReturn + \" \" + state.toSymbol}\n            </Text>\n            <Meta\n                label={t(\"market-price\")}\n                text={state.trade?.executionPrice?.invert().toFixed(8) || undefined}\n                suffix={state.fromSymbol + \" / \" + state.toSymbol}\n                disabled={d}\n            />\n            <Meta label={t(\"relayer-fee-amount\")} text={state.limitOrderFee} suffix={state.fromSymbol} disabled={d} />\n            <Meta label={t(\"swap-fee-amount\")} text={state.limitOrderSwapFee} suffix={state.fromSymbol} disabled={d} />\n            <Meta label={t(\"expiration\")} text={t(\"24-hours-from-now\")} disabled={d} />\n            <LimitOrderControls state={state} />\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst LimitOrderControls = ({ state }: { state: SwapState }) => {\n    const { getTokenAllowance } = useContext(EthersContext);\n    const [error, setError] = useState<MetamaskError>({});\n    const [allowed, setAllowed] = useState<boolean>();\n    useAsyncEffect(() => setError({}), [state.fromSymbol, state.toSymbol, state.fromAmount]);\n    useDelayedEffect(\n        async () => {\n            if (state.fromToken && !isEmptyValue(state.fromAmount)) {\n                const fromAmount = parseBalance(state.fromAmount, state.fromToken.decimals);\n                const allowance = await getTokenAllowance(state.fromToken.address, SETTLEMENT);\n                setAllowed(ethers.BigNumber.from(allowance).gte(fromAmount));\n            }\n        },\n        500,\n        [state.fromToken, state.fromAmount]\n    );\n    const disabled =\n        state.orderType === \"market\" ||\n        state.toSymbol === \"\" ||\n        !state.fromToken ||\n        !state.toToken ||\n        isEmptyValue(state.fromAmount) ||\n        !state.priceInETH ||\n        parseBalance(state.fromAmount, state.fromToken!.decimals).gt(state.priceInETH.mul(10)) ||\n        !state.trade ||\n        isEmptyValue(state.limitOrderPrice);\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {disabled ? (\n                <PlaceOrderButton state={state} onError={setError} disabled={true} />\n            ) : parseBalance(state.fromAmount, state.fromToken!.decimals).gt(state.fromToken!.balance) ? (\n                <InsufficientBalanceButton symbol={state.fromSymbol} />\n            ) : !Fraction.parse(state.limitOrderPrice).gt(\n                  Fraction.parse(state.trade!.executionPrice.invert().toFixed(state.toToken!.decimals))\n              ) ? (\n                <PriceTooLowButton />\n            ) : state.unsupported ? (\n                <UnsupportedButton state={state} />\n            ) : state.loading || !state.trade ? (\n                <FetchingButton />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.fromToken!}\n                        spender={SETTLEMENT}\n                        onSuccess={() => setAllowed(true)}\n                        onError={setError}\n                        hidden={allowed}\n                    />\n                    <PlaceOrderButton state={state} onError={setError} disabled={!allowed} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst PriceTooLowButton = () => {\n    const t = useTranslation();\n    return <Button title={t(\"set-price-greater-than-market\")} disabled={true} />;\n};\n\nconst PlaceOrderButton = ({\n    state,\n    onError,\n    disabled\n}: {\n    state: SwapState;\n    onError: (e) => void;\n    disabled: boolean;\n}) => {\n    const t = useTranslation();\n    const goToLimitOrders = useLinker(\"/swap/my-orders\", \"LimitOrders\");\n    const onPress = useCallback(async () => {\n        onError({});\n        try {\n            await state.onCreateOrder();\n            goToLimitOrders();\n        } catch (e) {\n            onError(e);\n        }\n    }, [state.onCreateOrder, goToLimitOrders, onError]);\n    return (\n        <Button title={t(\"place-limit-order\")} disabled={disabled} loading={state.creatingOrder} onPress={onPress} />\n    );\n};\n\nexport default SHTAboutScreen;\n"],"sourceRoot":""}